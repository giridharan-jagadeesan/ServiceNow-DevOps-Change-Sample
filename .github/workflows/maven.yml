# This workflow uses ServiceNow custom actions that are certified by ServiceNow.

name: CICD GitHub workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean compile

  # test:
  #   name: 'Test'
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4.0.0
  #     with:
  #       # Repository name with owner. For example, actions/checkout
  #       repository: # optional, default is ${{ github.repository }}
        
  #   - name: Run Tests with Maven
  #     run: mvn -B test --file pom.xml

  #   - name: ServiceNow DevOps Unit Test Results
  #   # You may pin to the exact commit or the version.
  #     uses: ServiceNow/servicenow-devops-test-report@v2.0.0
  #     with:
  #         # Devops Integration User Name
  #         devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
  #         # Devops Integration User Password
  #         devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
  #         # ServiceNow Instance Name
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Job Name
  #         job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # JUnit xml report file name with path
  #         xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
  #                                                                         # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml
  #         # GitHub Custom Action
  #         test-type: # optional, default is JUnit

  # registerArtifact:
  #   name: 'Register Artifact'
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: ServiceNow DevOps Register Artifact
  #   # You may pin to the exact commit or the version.          
  #     uses: ServiceNow/servicenow-devops-register-artifact@v2.0.0
  #     with:
  #         # Devops Integration User Name
  #         devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
  #         # Devops Integration User Password
  #         devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Display Name of the Job
  #         job-name: 'Register Artifact'
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # List of Artifacts to be registered
  #         artifacts: '[
  #             {
  #                 "name": "app-devops.jar",
  #                 "version": "1.${{ github.run_number }}",
  #                 "semanticVersion": "1.${{ github.run_number }}.0",
  #                 "repositoryName": "${{ github.repository }}"
  #             }
  #         ]'

  # sonarScan:
  #   name: 'Sonar Scan'
  #   needs: registerArtifact
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4.0.0
  #     with:
  #       # Repository name with owner. For example, actions/checkout
  #       repository: # optional, default is ${{ github.repository }}

    # uncomment below lines of code to trigger a new Sonar scan        
    # - name: Sonar Cloud Analysis
    #   if: success() # always() failure() success()
    #   run: >
    #       mvn -B verify -DskipTests sonar:sonar
    #       -Dsonar.projectKey=$SONAR_PROJECT_KEY
    #       -Dsonar.organization=$SONAR_ORG_KEY
    #       -Dsonar.host.url=$SONAR_URL
    #       -Dsonar.login=$SONAR_TOKEN
    #   env:
    #       GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #       SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
    #       SONAR_URL: ${{ secrets.SONAR_URL }}
    #       SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
    
    # - name: ServiceNow DevOps Sonar Scan Results
    # # You may pin to the exact commit or the version.     
    #   uses: ServiceNow/servicenow-devops-sonar@v2.0.0
    #   with:
    #       # ServiceNow Instance URL
    #       instance-url: ${{ secrets.SN_INSTANCE_URL }}
    #       # Devops Integration User Name
    #       devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
    #       # Devops Integration User Password
    #       devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
    #       # Orchestration Tool Id
    #       tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
    #       # Github Context
    #       context-github: ${{ toJSON(github) }}
    #       # Display Name of the Job
    #       job-name: 'Sonar Scan'
    #       # Sonar Host URL
    #       sonar-host-url: ${{ secrets.SONAR_URL }}
    #       # Sonar Project Key
    #       sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}

  securityScan:
    name: 'Security Scan'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.0.0
      with:
        # Repository name with owner. For example, actions/checkout
        repository: # optional, default is ${{ github.repository }}

    # uncomment below lines of code to trigger a new Veracode scan
    # - name: Veracode Upload And Scan
    #   uses: veracode/veracode-uploadandscan-action@0.2.6
    #   with:
    #       appname: 'ServiceNow DevOps App#1'
    #       createprofile: false
    #       filepath: 'target/*.jar'
    #       #version: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
    #       vid: '${{ secrets.VERACODE_API_ID }}'
    #       vkey: '${{ secrets.VERACODE_API_KEY }}'
    #       #deleteincompletescan: 1
    #       scantimeout: 20

    - name: ServiceNow DevOps Security Results
      uses: ServiceNow/servicenow-devops-security-result@v3.0.0
      with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Security Scan'
          security-result-attributes: '{ "scanner": "${{ secrets.SCANNER_NAME }}"}'

  # registerPackage:
  #   name: 'Register Package'
  #   needs: securityScan
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: ServiceNow DevOps Register Package
  #   # You may pin to the exact commit or the version.           
  #     uses: ServiceNow/servicenow-devops-register-package@v2.0.0
  #     with:
  #         # ServiceNow Devops Integration User Name
  #         devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
  #         # ServiceNow Devops Integration User Password
  #         devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id of the tool created in ServiceNow
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # List of Artifacts in JSON format
  #         artifacts: '[
  #             {
  #                 "name": "app-devops.jar",
  #                 "version": "1.${{ github.run_number }}",
  #                 "semanticVersion": "1.${{ github.run_number }}.0",
  #                 "repositoryName": "${{ github.repository }}"
  #             }
  #         ]'
  #         # Name of the Package that contains list of artifacts
  #         package-name: 'app-devops-change-velocity.war'
  #         # Display Name of Job
  #         job-name: 'Register Package'

  change:
    name: 'Change'
    needs: securityScan
    runs-on: ubuntu-latest
    steps:     
    - name: ServiceNow DevOps Change Automation
    # You may pin to the exact commit or the version.            
      uses: ServiceNow/servicenow-devops-change@v3.0.0
      with:
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          job-name: 'Change'
          context-github: ${{ toJSON(github) }}
          change-request: '{        
          }'
          
  # uncomment below lines of code to create change request using deployment gates, indent code if necessary
  #         deployment-gate: '{"environment":"prod", "jobId":"deploy", "jobName":"Deploy"}'
  # deploy:
  #   name: 'Deploy'
  #   needs: change
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Run deployment scripts
  #     run: echo 'Deployment step in progress...'

  deploy:
    name: 'Deploy'
    needs: change
    runs-on: ubuntu-latest
    steps:
    - name: Run deployment scripts
      run: echo 'Deployment step in progress...'
